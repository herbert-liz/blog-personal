[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "¡Hola! Soy Herbert Lizama y aquí comparto mis proyectos de R y Python que publico en mi página de Instagram y YouTube."
  },
  {
    "objectID": "about.html#sobre-mí",
    "href": "about.html#sobre-mí",
    "title": "About",
    "section": "Sobre mí",
    "text": "Sobre mí\nApasionado por el análisis de datos, la visualización y la ciencia de datos aplicada. En este sitio encontrarás ejemplos, tutoriales y proyectos prácticos.\nSoy actuario de profesión y me encanta enseñar y compartir conocimientos. Actualmente estoy estudiando la maestría en ciencia de datos por parte del INFOTEC. Me dedico a la ciencia de datos desde 2021 y he trabajado en proyectos de análisis de datos, modelado predictivo y visualización interactiva."
  },
  {
    "objectID": "about.html#sígueme",
    "href": "about.html#sígueme",
    "title": "About",
    "section": "Sígueme",
    "text": "Sígueme\nSi te interesa mi contenido, puedes apoyarme siguiendome en mis redes sociales:"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html",
    "href": "posts/2025-09-25-distribucion-edades/index.html",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "",
    "text": "En este documento te mostraré como crear el gráfico de distribución poblacional conocido como pirámide poblacional. Este tipo de gráfico es útil para visualizar la distribución de edades y sexos en una población determinada. A lo largo del documento, aprenderás:\n\nCómo crear gráficos con Seaborn\nMejorar los ejes para hacerlos legibles e informativos\nAgregar un título y leyenda elegantes\nCuadrículas para múltiples gráficos\n\nLas liberías que usaremos en este archivo son:\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.reset_defaults()\nsns.reset_orig()"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#introducción",
    "href": "posts/2025-09-25-distribucion-edades/index.html#introducción",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "",
    "text": "En este documento te mostraré como crear el gráfico de distribución poblacional conocido como pirámide poblacional. Este tipo de gráfico es útil para visualizar la distribución de edades y sexos en una población determinada. A lo largo del documento, aprenderás:\n\nCómo crear gráficos con Seaborn\nMejorar los ejes para hacerlos legibles e informativos\nAgregar un título y leyenda elegantes\nCuadrículas para múltiples gráficos\n\nLas liberías que usaremos en este archivo son:\n\nimport pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nsns.reset_defaults()\nsns.reset_orig()"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#datos",
    "href": "posts/2025-09-25-distribucion-edades/index.html#datos",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Datos",
    "text": "Datos\nPara este ejercicio, usaremos datos de población por edad y sexo del Censo de Población y Vivienda 2020 del INEGI. Fuente.\n\ndatos = pd.read_csv(\"poblacion2020.csv\")\ndatos.head()\n\n\n\n\n\n\n\n\nEntidad\nGrupoEdad\nTotal\nHombres\nMujeres\n\n\n\n\n0\nEstados Unidos Mexicanos\nTotal\n126014024\n61473390\n64540634\n\n\n1\nEstados Unidos Mexicanos\n0 a 4 años\n10047365\n5077482\n4969883\n\n\n2\nEstados Unidos Mexicanos\n5 a 9 años\n10764379\n5453091\n5311288\n\n\n3\nEstados Unidos Mexicanos\n10 a 14 años\n10943540\n5554260\n5389280\n\n\n4\nEstados Unidos Mexicanos\n15 a 19 años\n10806690\n5462150\n5344540\n\n\n\n\n\n\n\nTenemos seis columnas, descritas a continuación:\n\nEntidad: contiene los diferentes estados de México. Los registros con la Entidad igual a “Estados Unidos Mexicanos” contienen los datos totales nacionales.\nGrupoEdad: contiene los grupos quinquenales de edad (0-4, 5-9, 10-14, etc.). Además, hay un grupo adicional con la etiqueta “Total” que contiene el total de todas las edades.\nHombres: contiene el número de hombres en cada grupo de edad y estado.\nMujeres: contiene el número de mujeres en cada grupo de edad y estado.\nTotal: contiene el número total de personas (hombres + mujeres) en cada grupo de edad y estado.\n\nPor temas de visualización que veremos más adelante, convertimos en valores negativos los datos de población de hombres (o mujeres, según se prefiera):\n\ndatos['Hombres'] = -datos['Hombres']\ndatos.head()\n\n\n\n\n\n\n\n\nEntidad\nGrupoEdad\nTotal\nHombres\nMujeres\n\n\n\n\n0\nEstados Unidos Mexicanos\nTotal\n126014024\n-61473390\n64540634\n\n\n1\nEstados Unidos Mexicanos\n0 a 4 años\n10047365\n-5077482\n4969883\n\n\n2\nEstados Unidos Mexicanos\n5 a 9 años\n10764379\n-5453091\n5311288\n\n\n3\nEstados Unidos Mexicanos\n10 a 14 años\n10943540\n-5554260\n5389280\n\n\n4\nEstados Unidos Mexicanos\n15 a 19 años\n10806690\n-5462150\n5344540"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#gráfico-básico",
    "href": "posts/2025-09-25-distribucion-edades/index.html#gráfico-básico",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Gráfico básico",
    "text": "Gráfico básico\nPrimero crearemos un gráfico básico para visualizar la pirámide poblacional de México. Filtramos los datos para obtener solo los registros correspondientes a “Estados Unidos Mexicanos”, además de eliminar el grupo de edad “Total”:\n\ndatos_mexico = datos[datos['Entidad'] == 'Estados Unidos Mexicanos']\ndatos_mexico = datos_mexico[datos_mexico['GrupoEdad'] != 'Total']\n\nA continuación, creamos el gráfico base usando seaborn:\n\nplt.figure(figsize=(10.8, 10.8), dpi=100)\nax = sns.barplot(x='Hombres', y='GrupoEdad', data=datos_mexico, color='blue', label='Hombres')\nax = sns.barplot(x='Mujeres', y='GrupoEdad', data=datos_mexico, color='red', label='Mujeres')\nplt.title('Piramide poblacional México (2020)')\nplt.xlabel('Número de Personas')\nplt.ylabel('Grupo de Edad')\nplt.legend()\nplt.gca().invert_yaxis() # Utilizar únicamente si su pirámide está invertida\nplt.show()\n\n\n\n\n\n\n\n\nAnteriormente convertimos el valor de hombres a negativo para que las baras horizontales se dibujen hacia la izquierda y derecha dependiendo del sexo.\nCómo se observa, el gráfico es funcional, pero puede mejorarse visualmente en varios aspectos, como los ejes, el título y la leyenda."
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#mejoras-visuales",
    "href": "posts/2025-09-25-distribucion-edades/index.html#mejoras-visuales",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Mejoras visuales",
    "text": "Mejoras visuales\nUna de las ventajas de usar Seaborn es la facilidad con la que se pueden personalizar los gráficos. Esto se logra mediante la función set_style, que permite definir varios aspectos visuales del gráfico.\nA continuación, crearemos una función para aplicar un estilo personalizado a nuestros gráficos:\n\ndef set_seaborn_style(font_family, background_color, grid_color, text_color):\n    sns.set_style({\n        \"axes.facecolor\": background_color,\n        \"figure.facecolor\": background_color,\n\n        \"axes.labelcolor\": text_color,\n\n        \"axes.edgecolor\": grid_color,\n        \"axes.grid\": True,\n        \"axes.axisbelow\": True,\n\n        \"grid.color\": grid_color,\n\n        \"font.family\": font_family,\n        \"text.color\": text_color,\n        \"xtick.color\": text_color,\n        \"ytick.color\": text_color,\n\n        \"xtick.bottom\": False,\n        \"xtick.top\": False,\n        \"ytick.left\": False,\n        \"ytick.right\": False,\n\n        \"axes.spines.left\": False,\n        \"axes.spines.bottom\": True,\n        \"axes.spines.right\": False,\n        \"axes.spines.top\": False,\n    }\n)\n\nObserva como la función set_seaborn_style permite personalizar varios aspectos del estilo del gráfico, incluyendo la familia de fuentes, colores de fondo, colores de cuadrícula y colores de texto.\nPara aplicar este estilo a nuestros gráficos, simplemente llamamos a la función antes de crear cualquier gráfico y definimos los parámetros deseados.\nTen en cuenta que todos las gráficos creados después de llamar a esta función adoptarán el estilo definido. Si deseas volver al estilo predeterminado de Seaborn, puedes usar sns.reset_defaults() o sns.reset_orig().\nApliquemos la función a nuestra pirámide poblacional para observar las mejoras:\n\nset_seaborn_style(\n    font_family=\"PT Mono\",\n    background_color=\"#253D5B\",\n    grid_color=\"#355882\",\n    text_color=\"#EEEEEE\"\n)\n\nplt.figure(figsize=(10.8, 10.8), dpi=100)\nax = sns.barplot(x='Hombres', y='GrupoEdad', data=datos_mexico, color='#05B2DC', label='Hombres')\nax = sns.barplot(x='Mujeres', y='GrupoEdad', data=datos_mexico, color='#F64740', label='Mujeres')\nplt.title('Piramide poblacional México (2020)', fontsize=16, weight='bold')\nplt.xlabel('Número de Personas')\nplt.ylabel('Grupo de Edad')\nplt.legend(title='Sexo')\n\nplt.gca().invert_yaxis() # Utilizar únicamente si su pirámide está invertida\nplt.xticks(fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()\n\n\n\n\n\n\n\n\nSi tenemos los mismos gustos, estaremos de acuerdo en que hay una mejora significativa en la apariencia del gráfico."
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#mejoras-informativas",
    "href": "posts/2025-09-25-distribucion-edades/index.html#mejoras-informativas",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Mejoras informativas",
    "text": "Mejoras informativas\nAhora que el gráfico luce mejor, es momento de hacer que sea más informativo. Particularmente, daremos formato al eje x, de tal forma que los valores aparezcan en miles (K), millones (M) o porcentaje (%), según sea el caso.\nPrimero, veamos los valores actuales del eje x (los extremos no se grafican, por lo que no nos interean):\n\nax.get_xticks()[1:-1]\n\narray([-6000000., -4000000., -2000000.,        0.,  2000000.,  4000000.])\n\n\nAunque los valores aparecen completos, la gráfica por defecto los muetra en notación científica, lo cual no es muy amigable para el lector. Para mejorar esto, crearemos una función que genere las etiquetas del eje x en el formato deseado:\n\ndef create_x_labels(ax, formato):\n    if formato == \"millones\":\n        return [\"{}M\".format(round(abs(x / 1000000))) for x in ax.get_xticks()[1:-1]]\n    elif formato == \"miles\":\n        return [\"{}K\".format(round(abs(x / 1000))) for x in ax.get_xticks()[1:-1]]\n    elif formato == \"porcentaje\":\n        return [\"{}%\".format(round(abs(x)*100, 1)) for x in ax.get_xticks()[1:-1]]\n\nLa función create_x_labels toma dos argumentos: el objeto ax del gráfico y el formato deseado para las etiquetas. Dependiendo del formato especificado (“millones”, “miles” o “porcentaje”), la función devuelve una lista de etiquetas formateadas adecuadamente.\nApliquemos esta función a nuestro gráfico de pirámide poblacional:\n\nset_seaborn_style(\n    font_family=\"PT Mono\",\n    background_color=\"#253D5B\",\n    grid_color=\"#355882\",\n    text_color=\"#EEEEEE\"\n)\nplt.figure(figsize=(10.8, 10.8), dpi=100)\nax = sns.barplot(x='Hombres', y='GrupoEdad', data=datos_mexico, color='#05B2DC', label='Hombres')\nax = sns.barplot(x='Mujeres', y='GrupoEdad', data=datos_mexico, color='#F64740', label='Mujeres')\nplt.title('Piramide poblacional México (2020)', fontsize=16, weight='bold')\nplt.xlabel('Número de Personas')\nplt.ylabel('Grupo de Edad')\nplt.legend(title='Sexo')\nplt.gca().invert_yaxis() # Utilizar únicamente si su pirámide está invertida\nplt.xticks(ticks=ax.get_xticks()[1:-1], labels=create_x_labels(ax, formato=\"millones\"), fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()\n\n\n\n\n\n\n\n\nObserva cómo las etiquetas del eje x ahora están en un formato más legible, mostrando los valores en millones (M). Esto mejora significativamente la comprensión del gráfico, haciendo que los datos sean más accesibles para el lector."
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#porcentaje-de-población",
    "href": "posts/2025-09-25-distribucion-edades/index.html#porcentaje-de-población",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Porcentaje de población",
    "text": "Porcentaje de población\nOtra forma útil de visualizar la pirámide poblacional es mediante porcentajes en lugar de números absolutos. Esto permite comparar la distribución de edades entre diferentes poblaciones o estados sin importar el tamaño total de la población. Para lograr esto, primero calculamos el porcentaje de hombres y mujeres en cada grupo de edad con respecto al total nacional:\n\ntotal_poblacion = -datos_mexico['Hombres'].sum() + datos_mexico['Mujeres'].sum()\ndatos_mexico['ptg_Hombres'] = (datos_mexico['Hombres'] / total_poblacion)\ndatos_mexico['ptg_Mujeres'] = (datos_mexico['Mujeres'] / total_poblacion)\ndatos_mexico.head()\n\n\n\n\n\n\n\n\nEntidad\nGrupoEdad\nTotal\nHombres\nMujeres\nptg_Hombres\nptg_Mujeres\n\n\n\n\n1\nEstados Unidos Mexicanos\n0 a 4 años\n10047365\n-5077482\n4969883\n-0.040293\n0.039439\n\n\n2\nEstados Unidos Mexicanos\n5 a 9 años\n10764379\n-5453091\n5311288\n-0.043274\n0.042148\n\n\n3\nEstados Unidos Mexicanos\n10 a 14 años\n10943540\n-5554260\n5389280\n-0.044077\n0.042767\n\n\n4\nEstados Unidos Mexicanos\n15 a 19 años\n10806690\n-5462150\n5344540\n-0.043346\n0.042412\n\n\n5\nEstados Unidos Mexicanos\n20 a 24 años\n10422095\n-5165884\n5256211\n-0.040995\n0.041711\n\n\n\n\n\n\n\nAhora, creamos el gráfico de pirámide poblacional usando los porcentajes calculados:\n\nset_seaborn_style(\n    font_family=\"PT Mono\",\n    background_color=\"#253D5B\",\n    grid_color=\"#355882\",\n    text_color=\"#EEEEEE\"\n)\nplt.figure(figsize=(10.8, 10.8), dpi=100)\nax = sns.barplot(x='ptg_Hombres', y='GrupoEdad', data=datos_mexico, color='#05B2DC', label='Hombres')\nax = sns.barplot(x='ptg_Mujeres', y='GrupoEdad', data=datos_mexico, color='#F64740', label='Mujeres')\nplt.title('Piramide poblacional México (2020)', fontsize=16, weight='bold')\nplt.xlabel('Porcentaje de Personas')\nplt.ylabel('Grupo de Edad')\nplt.legend(title='Sexo')\nplt.gca().invert_yaxis() # Utilizar únicamente si su pirámide está invertida\nplt.xticks(ticks=ax.get_xticks()[1:-1], labels=create_x_labels(ax, formato=\"porcentaje\"), fontsize=10)\nplt.yticks(fontsize=10)\nplt.show()"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#agregar-etiqueta-a-cada-barra",
    "href": "posts/2025-09-25-distribucion-edades/index.html#agregar-etiqueta-a-cada-barra",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Agregar etiqueta a cada barra",
    "text": "Agregar etiqueta a cada barra\nFinalmente, para mejorar aún más la información proporcionada por el gráfico, podemos agregar etiquetas a cada barra que indiquen el valor exacto representado.\nEsto es especialmente útil cuando se desea resaltar ciertos datos específicos o cuando el gráfico se presenta en un contexto donde los detalles son importantes. Para agregar estas etiquetas, podemos usar la función text de Matplotlib dentro de un bucle que recorra cada barra del gráfico. Aquí te muestro cómo hacerlo:\n\nset_seaborn_style(\n    font_family=\"PT Mono\",\n    background_color=\"#253D5B\",\n    grid_color=\"#355882\",\n    text_color=\"#EEEEEE\"\n)\nplt.figure(figsize=(10.8, 10.8), dpi=100)\nax = sns.barplot(x='ptg_Hombres', y='GrupoEdad', data=datos_mexico, color='#05B2DC', label='Hombres')\nax = sns.barplot(x='ptg_Mujeres', y='GrupoEdad', data=datos_mexico, color='#F64740', label='Mujeres')\nplt.title('Piramide poblacional México (2020)', fontsize=16, weight='bold')\nplt.xlabel('Porcentaje de Personas')\nplt.ylabel('Grupo de Edad')\nplt.legend(title='Sexo')\nplt.gca().invert_yaxis() # Utilizar únicamente si su pirámide está invertida\nplt.xticks(ticks=ax.get_xticks()[1:-1], labels=create_x_labels(ax, formato=\"porcentaje\"), fontsize=10)\nplt.yticks(fontsize=10)\n\n# Agregar etiquetas a cada barra\nfor p in ax.patches:\n    width = p.get_width()\n    ax.text(\n        x=width + (0.0005 if width &gt; 0 else -0.0005), # Ajuste para que no se superponga con la barra \n        y=p.get_y() + p.get_height() / 2, \n        s=f'{round(abs(width)*100, 1)}%', \n        ha='left' if width &gt; 0 else 'right', \n        va='center', \n        fontsize=8,\n        color='#EEEEEE'\n    )\n\nplt.show()"
  },
  {
    "objectID": "posts/2025-09-25-distribucion-edades/index.html#conclusiones",
    "href": "posts/2025-09-25-distribucion-edades/index.html#conclusiones",
    "title": "Gráfico distribución de edades - Pirámide poblacional",
    "section": "Conclusiones",
    "text": "Conclusiones\nSi has llegado hasta aquí, ¡felicidades! Has aprendido a crear un gráfico de pirámide poblacional desde cero, mejorarlo visualmente e informativamente, y agregar detalles adicionales para hacerlo más útil.\nSé que aún quedan muchos aspectos por explorar, como la creación de gráficos múltiples en una sola figura, dimensiones de la figura, títulos más elaborados, entre otras cosas. Sin embargo, los conceptos y técnicas que has aprendido aquí te proporcionan una base sólida para seguir experimentando y mejorando tus habilidades en visualización de datos con Python."
  },
  {
    "objectID": "posts/post-with-code/index.html",
    "href": "posts/post-with-code/index.html",
    "title": "Post With Code",
    "section": "",
    "text": "This is a post with executable code."
  },
  {
    "objectID": "posts/welcome/index.html",
    "href": "posts/welcome/index.html",
    "title": "Welcome To My Blog",
    "section": "",
    "text": "This is the first post in a Quarto blog. Welcome!\n\nSince this post doesn’t specify an explicit image, the first image in the post will be used in the listing page of posts."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "blog-personal",
    "section": "",
    "text": "Post With Code\n\n\n\n\n\n\nnews\n\n\ncode\n\n\nanalysis\n\n\n\n\n\n\n\n\n\nSep 26, 2025\n\n\nHarlow Malloc\n\n\n\n\n\n\n\n\n\n\n\n\nGráfico distribución de edades - Pirámide poblacional\n\n\n\n\n\n\npython\n\n\n\n\n\n\n\n\n\nSep 26, 2025\n\n\nHerbert Lizama\n\n\n\n\n\n\n\n\n\n\n\n\nWelcome To My Blog\n\n\n\n\n\n\nnews\n\n\n\n\n\n\n\n\n\nSep 23, 2025\n\n\nTristan O’Malley\n\n\n\n\n\n\nNo matching items"
  }
]